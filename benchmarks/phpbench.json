{
    "bootstrap": "../vendor/autoload.php",
    "path": "./",
    "retry_threshold": 10,
    "output_mode": "throughput",
    "time_unit": "seconds",
    "extensions": [
        "PhpBench\\Extensions\\XDebug\\XDebugExtension"
    ],
    "outputs": {
        "console_example": {
            "renderer": "console",
            "table_style": "symfony-style-guide"
        },
        "html_example": {
            "title": "PHPBench Examples",
            "renderer": "xslt",
            "file": "example.html"
        }
    },
    "reports": {
        "cost_of_setting": {
            "extends": "aggregate",
            "title": "Cost of Setting",
            "description": "Comparison of different ways of setting properties",
            "groups": ["cost_of_setting"],
            "exclude": ["benchmark"]
        },
        "cost_of_instantiation": {
            "extends": "aggregate",
            "title": "Cost of Instantiation",
            "description": "Compares instantiating a class directly against instantiating via. Reflection",
            "groups": ["cost_of_instantiation"],
            "exclude": ["benchmark", "group", "params"]
        },
        "cost_of_calling": {
            "extends": "aggregate",
            "title": "Cost of calling",
            "description": "Compare calling methods with and without arguments",
            "groups": ["cost_of_calling"],
            "exclude": ["benchmark", "group", "params"]
        },
        "array_keys": {
            "generator": "table_custom",
            "title": "Comparison of array location functions",
            "description": "This benchmark creates an array with checks the performance of array location functions with variable numbers of elements. Deviation is relative to the number of elements.",
            "file": "reports/array_keys.json"
        },
        "string_splitting": {
            "extends": "aggregate",
            "title": "String Splitting",
            "description": "Compare different methods of splitting#strings",
            "selector": "//subject[group/@name='string_extraction']//variant",
            "exclude": ["benchmark", "group", "params"]
        },
        "all": {
            "generator": "composite",
            "reports": ["cost_of_setting", "cost_of_instantiation", "cost_of_calling", "string_splitting", "array_keys"]
        }
    }
}
